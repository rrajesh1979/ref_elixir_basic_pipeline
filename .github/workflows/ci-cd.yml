name: CI

on:
  pull_request:
    branches:
      - master
      - dev
  push:
    branches:
      - master
      - dev

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      MIX_ENV: test
    strategy:
      fail-fast: false
      matrix:
        include:
          - pair:
              elixir: 1.13
              otp: 24.2
              node: 16.13.2
            lint: lint
    steps:
      - name: Checking out the repository
        uses: actions/checkout@v2

      - name: Setup the Elixir / OTP versions
        uses: erlef/setup-beam@v1
        with:
          otp-version: ${{matrix.pair.otp}}
          elixir-version: ${{matrix.pair.elixir}}

      - name: Install node and Dependencies
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

      - name: Install Dependencies
        run: mix deps.get --only test

      - run: mix format --check-formatted
        if: ${{ matrix.lint }}

      - run: mix deps.get && mix deps.unlock --check-unused
        if: ${{ matrix.lint }}

      - run: mix deps.compile

      - run: mix compile --warnings-as-errors
        if: ${{ matrix.lint }}

      - name: Run tests
        run: mix test

      - name: Run Credo static code analysis
        run: mix credo

      - name: Build Executable
        run: mix escript.build

      - name: Prepare release
        run: |
          mix compile
          mix release
          # yarn --cwd assets deploy
        env:
          MIX_ENV: prod

      - name: 'Upload version files'
        uses: actions/upload-artifact@v2
        with:
          name: artifacts
          path: |
            ref_elixir_basic_pipeline
            lib

      - name: "Release latest"
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: true
          title: "Development Build"
          files: |
            ref_elixir_basic_pipeline
            lib

